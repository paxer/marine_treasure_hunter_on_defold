function init(self)
	self.pos = go.get_position()
	self.hose_segment_ids = {}
	draw_hose(self)
	self.player_pos = go.get_position("player")
end

function update(self, dt)
	local player_pos = go.get_position("player")
	if self.player_pos ~= player_pos then
		self.player_pos = player_pos
		redraw_hose(self)
	end
	go.set_position(vmath.vector3(player_pos.x, self.pos.y, self.pos.z))
end

function redraw_hose(self)
	for _, id in ipairs(self.hose_segment_ids) do
		go.delete(id)
	end
	self.hose_segment_ids = {}
	draw_hose(self)
end


function draw_hose(self)
	ship_pos = go.get_position()
	player_pos = go.get_position("player")
	
	ship_pos_y = ship_pos.y - 32 -- from the bottom of ship
	player_pos_y = player_pos.y + 28 -- from the player head
	
	y_distance_beween_ship_and_player = ship_pos_y - player_pos_y
	hose_segments_between_player_and_ship = math.floor(y_distance_beween_ship_and_player / 10) -- 7 is the height of the hose sprite + 3 gap

	start_hose_segment_y_pos = ship_pos_y
	
	for i = 1, hose_segments_between_player_and_ship do		
		hose_object_id = factory.create("#hose_factory", vmath.vector3(ship_pos.x, start_hose_segment_y_pos, 1), nil, nil)
		self.hose_segment_ids[i] = hose_object_id
		start_hose_segment_y_pos = start_hose_segment_y_pos - 10
	end
end